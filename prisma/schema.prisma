// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    String   @id @default(uuid())
  first_name String
  last_name  String
  email      String   @unique
  password   String
  DOB        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Organization {
  org_id                String         @id @default(uuid())
  name                  String
  merchant_id           String         @unique
  email                 String         @unique
  phone                 String
  payment_processor     String
  company_registeration String
  logo                  String?
  primary_color         String?
  secondary_color       String?
  facebook              String?
  instagram             String?
  twitter               String?
  linkedin              String?
  tiktok                String?
  // Remove the orgRequest field
  orgRequest            OrgRequest?     @relation(fields: [request_id], references: [request_id])
  request_id            String?         @unique
  admin                 Admin[]
  announcement          Announcement[]
  created_at            DateTime       @default(now())
  updated_at            DateTime       @updatedAt
}

// Define the OrgRequest model
model OrgRequest {
  request_id            String        @id @default(uuid())
  name                  String
  email                 String        @unique
  phone                 String
  status                Status        @default(pending)
  company_registeration String
  created_at            DateTime      @default(now())
  updated_at            DateTime      @updatedAt
  // Add the org_id field to establish the one-to-one relationship
  organization          Organization?
}

model Admin {
  admin_id String @id @default(uuid())
  name     String
  email    String @unique
  password String

  role       Role         @default(owner)
  org        Organization @relation(fields: [org_id], references: [org_id])
  org_id     String
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
}

model superAdmin {
  super_admin_id String   @id @default(uuid())
  name           String
  email          String   @unique
  password       String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
}
model Announcement {
  announcement_id String       @id @default(uuid())
  message         String
  type            String
  org             Organization @relation(fields: [org_id], references: [org_id])
  org_id          String
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
}

enum Role {
  owner
  employee
}

enum Status {
  pending
  approved
  rejected
}
